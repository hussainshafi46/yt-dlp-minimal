name: Apply Patch and Create Release

on:
  push:
    paths:
      - 'minimal.patch'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Clone Target Repository
        run: |
          git clone https://github.com/yt-dlp/yt-dlp.git

      - name: Apply Patch
        run: |
          cd yt-dlp/yt_dlp
          patch -p1 < ../../minimal.patch
          keep_files=("adobepass.py", "common.py", "commonprotocols.py", "extractors.py", "generic.py", "openload.py")
          all_py_files=$(find . -type f -name "*.py")
          while IFS= read -r file; do
            keep=false
            for keep_file in "${keep_files[@]}"; do
              if [[ "$file" == "$keep_file" ]]; then
                keep=true
                break
              fi
            done
            if [[ "$keep" == false ]]; then
              rm "$file"
              echo "Deleted: $file"
            fi
          done <<< "$all_py_files"
        continue-on-error: true # Allow workflow to continue even if patch fails
        
      - name: Tar Directory
        run: |
          rm -f yt_dlp.tar.gz
          cd yt-dlp
          tar -czvf yt_dlp.tar.gz yt_dlp/ 
          mv yt_dlp.tar.gz ../
          cd ..
          rm -rf yt-dlp
      - name: Configure Git User
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: Commit Changes
        run: |
          git add yt_dlp.tar.gz
          git commit -m "Add minified yt-dlp tarball"

      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref_name }} # Pu
